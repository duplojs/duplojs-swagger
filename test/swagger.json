{
    "tags": [
        {
            "name": "user",
            "description": "Route to iteract with user."
        }
    ],
    "schemes": [
        "http"
    ],
    "info": {
        "title": "swagger",
        "version": "3.0.0"
    },
    "swagger": "2.0",
    "paths": {
        "/user/name": {
            "get": {
                "responses": {},
                "parameters": [
                    {
                        "type": "string",
                        "in": "query",
                        "name": "test"
                    }
                ],
                "tags": [],
                "schemes": [],
                "description": "pass par une route abstraite",
                "deprecated": false
            }
        },
        "/user/name/2": {
            "get": {
                "responses": {},
                "parameters": [],
                "tags": [],
                "schemes": [],
                "description": "",
                "deprecated": false
            }
        },
        "/user/{name}": {
            "get": {
                "responses": {},
                "parameters": [
                    {
                        "type": "string",
                        "enum": [
                            "math",
                            "gab"
                        ],
                        "in": "path",
                        "name": "name"
                    }
                ],
                "tags": [
                    "user"
                ],
                "schemes": [
                    "test"
                ],
                "description": "verif if input is odd\nsuper process\nGet user by name\nUser is so strong",
                "deprecated": false
            }
        },
        "/posts": {
            "get": {
                "responses": {},
                "parameters": [
                    {
                        "type": "number",
                        "example": 15,
                        "in": "query",
                        "name": "page"
                    }
                ],
                "tags": [],
                "schemes": [],
                "description": "",
                "deprecated": false
            }
        },
        "/user": {
            "post": {
                "responses": {
                    "200": {
                        "code": 200,
                        "description": "test",
                        "schema": {
                            "allOf": [
                                {
                                    "type": "object",
                                    "properties": {
                                        "test": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "test"
                                    ]
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "test1": {
                                            "type": "string"
                                        },
                                        "test2": {
                                            "type": "number"
                                        }
                                    },
                                    "required": [
                                        "test1",
                                        "test2"
                                    ]
                                }
                            ]
                        },
                        "info": [
                            "user.get.total"
                        ],
                        "examples": {},
                        "headers": {
                            "info": {
                                "type": "string",
                                "description": "user.get | user.get.total"
                            }
                        }
                    },
                    "400": {
                        "code": 400,
                        "description": "",
                        "info": [
                            "test"
                        ],
                        "examples": {},
                        "headers": {
                            "info": {
                                "type": "string",
                                "description": "test"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string",
                                "enum": [
                                    "math",
                                    "gab"
                                ]
                            },
                            "age": {
                                "type": "number",
                                "example": 34
                            }
                        },
                        "required": [
                            "name"
                        ],
                        "in": "body",
                        "name": "body"
                    }
                ],
                "tags": [
                    "user"
                ],
                "schemes": [],
                "description": "add checker isOdd",
                "deprecated": false
            }
        },
        "/user/{id}": {
            "delete": {
                "responses": {},
                "parameters": [
                    {
                        "type": "number",
                        "example": 0,
                        "in": "path",
                        "name": "id"
                    },
                    {
                        "type": "boolean",
                        "in": "header",
                        "name": "isAdmin"
                    }
                ],
                "tags": [
                    "user"
                ],
                "schemes": [],
                "description": "",
                "deprecated": true
            }
        }
    }
}